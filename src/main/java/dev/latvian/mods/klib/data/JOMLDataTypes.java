package dev.latvian.mods.klib.data;

import dev.latvian.mods.klib.codec.JOMLCodecs;
import dev.latvian.mods.klib.codec.JOMLStreamCodecs;
import org.joml.Matrix2d;
import org.joml.Matrix2dc;
import org.joml.Matrix2f;
import org.joml.Matrix2fc;
import org.joml.Matrix3d;
import org.joml.Matrix3dc;
import org.joml.Matrix3f;
import org.joml.Matrix3fc;
import org.joml.Matrix4d;
import org.joml.Matrix4dc;
import org.joml.Matrix4f;
import org.joml.Matrix4fc;
import org.joml.Quaterniond;
import org.joml.Quaterniondc;
import org.joml.Quaternionf;
import org.joml.Quaternionfc;
import org.joml.Vector2d;
import org.joml.Vector2dc;
import org.joml.Vector2f;
import org.joml.Vector2fc;
import org.joml.Vector2i;
import org.joml.Vector2ic;
import org.joml.Vector3d;
import org.joml.Vector3dc;
import org.joml.Vector3f;
import org.joml.Vector3fc;
import org.joml.Vector3i;
import org.joml.Vector3ic;
import org.joml.Vector4d;
import org.joml.Vector4dc;
import org.joml.Vector4f;
import org.joml.Vector4fc;
import org.joml.Vector4i;
import org.joml.Vector4ic;

public interface JOMLDataTypes {
	DataType<Vector2f> VEC2 = DataType.of(JOMLCodecs.VEC2, JOMLStreamCodecs.VEC2, Vector2f.class);
	DataType<Vector3f> VEC3 = DataType.of(JOMLCodecs.VEC3, JOMLStreamCodecs.VEC3, Vector3f.class);
	DataType<Vector4f> VEC4 = DataType.of(JOMLCodecs.VEC4, JOMLStreamCodecs.VEC4, Vector4f.class);
	DataType<Vector2f> VEC2S = DataType.of(JOMLCodecs.VEC2S, JOMLStreamCodecs.VEC2S, Vector2f.class);
	DataType<Vector3f> VEC3S = DataType.of(JOMLCodecs.VEC3S, JOMLStreamCodecs.VEC3S, Vector3f.class);
	DataType<Vector4f> VEC4S = DataType.of(JOMLCodecs.VEC4S, JOMLStreamCodecs.VEC4S, Vector4f.class);
	DataType<Quaternionf> QUATERNION = DataType.of(JOMLCodecs.QUATERNION, JOMLStreamCodecs.QUATERNION, Quaternionf.class);
	DataType<Matrix2f> MAT2 = DataType.of(JOMLCodecs.MAT2, JOMLStreamCodecs.MAT2, Matrix2f.class);
	DataType<Matrix3f> MAT3 = DataType.of(JOMLCodecs.MAT3, JOMLStreamCodecs.MAT3, Matrix3f.class);
	DataType<Matrix4f> MAT4 = DataType.of(JOMLCodecs.MAT4, JOMLStreamCodecs.MAT4, Matrix4f.class);
	DataType<Vector2d> DVEC2 = DataType.of(JOMLCodecs.DVEC2, JOMLStreamCodecs.DVEC2, Vector2d.class);
	DataType<Vector3d> DVEC3 = DataType.of(JOMLCodecs.DVEC3, JOMLStreamCodecs.DVEC3, Vector3d.class);
	DataType<Vector4d> DVEC4 = DataType.of(JOMLCodecs.DVEC4, JOMLStreamCodecs.DVEC4, Vector4d.class);
	DataType<Vector2d> DVEC2S = DataType.of(JOMLCodecs.DVEC2S, JOMLStreamCodecs.DVEC2S, Vector2d.class);
	DataType<Vector3d> DVEC3S = DataType.of(JOMLCodecs.DVEC3S, JOMLStreamCodecs.DVEC3S, Vector3d.class);
	DataType<Vector4d> DVEC4S = DataType.of(JOMLCodecs.DVEC4S, JOMLStreamCodecs.DVEC4S, Vector4d.class);
	DataType<Quaterniond> DQUATERNION = DataType.of(JOMLCodecs.DQUATERNION, JOMLStreamCodecs.DQUATERNION, Quaterniond.class);
	DataType<Matrix2d> DMAT2 = DataType.of(JOMLCodecs.DMAT2, JOMLStreamCodecs.DMAT2, Matrix2d.class);
	DataType<Matrix3d> DMAT3 = DataType.of(JOMLCodecs.DMAT3, JOMLStreamCodecs.DMAT3, Matrix3d.class);
	DataType<Matrix4d> DMAT4 = DataType.of(JOMLCodecs.DMAT4, JOMLStreamCodecs.DMAT4, Matrix4d.class);
	DataType<Matrix2d> FDMAT2 = DataType.of(JOMLCodecs.DMAT2, JOMLStreamCodecs.FDMAT2, Matrix2d.class);
	DataType<Matrix3d> FDMAT3 = DataType.of(JOMLCodecs.DMAT3, JOMLStreamCodecs.FDMAT3, Matrix3d.class);
	DataType<Matrix4d> FDMAT4 = DataType.of(JOMLCodecs.DMAT4, JOMLStreamCodecs.FDMAT4, Matrix4d.class);
	DataType<Vector2i> IVEC2 = DataType.of(JOMLCodecs.IVEC2, JOMLStreamCodecs.IVEC2, Vector2i.class);
	DataType<Vector3i> IVEC3 = DataType.of(JOMLCodecs.IVEC3, JOMLStreamCodecs.IVEC3, Vector3i.class);
	DataType<Vector4i> IVEC4 = DataType.of(JOMLCodecs.IVEC4, JOMLStreamCodecs.IVEC4, Vector4i.class);
	DataType<Vector2i> VIVEC2 = DataType.of(JOMLCodecs.IVEC2, JOMLStreamCodecs.VIVEC2, Vector2i.class);
	DataType<Vector3i> VIVEC3 = DataType.of(JOMLCodecs.IVEC3, JOMLStreamCodecs.VIVEC3, Vector3i.class);
	DataType<Vector4i> VIVEC4 = DataType.of(JOMLCodecs.IVEC4, JOMLStreamCodecs.VIVEC4, Vector4i.class);

	DataType<Vector2fc> VEC2C = DataType.of(JOMLCodecs.VEC2C, JOMLStreamCodecs.VEC2C, Vector2fc.class);
	DataType<Vector3fc> VEC3C = DataType.of(JOMLCodecs.VEC3C, JOMLStreamCodecs.VEC3C, Vector3fc.class);
	DataType<Vector4fc> VEC4C = DataType.of(JOMLCodecs.VEC4C, JOMLStreamCodecs.VEC4C, Vector4fc.class);
	DataType<Vector2fc> VEC2SC = DataType.of(JOMLCodecs.VEC2SC, JOMLStreamCodecs.VEC2SC, Vector2fc.class);
	DataType<Vector3fc> VEC3SC = DataType.of(JOMLCodecs.VEC3SC, JOMLStreamCodecs.VEC3SC, Vector3fc.class);
	DataType<Vector4fc> VEC4SC = DataType.of(JOMLCodecs.VEC4SC, JOMLStreamCodecs.VEC4SC, Vector4fc.class);
	DataType<Quaternionfc> QUATERNIONC = DataType.of(JOMLCodecs.QUATERNIONC, JOMLStreamCodecs.QUATERNIONC, Quaternionfc.class);
	DataType<Matrix2fc> MAT2C = DataType.of(JOMLCodecs.MAT2C, JOMLStreamCodecs.MAT2C, Matrix2fc.class);
	DataType<Matrix3fc> MAT3C = DataType.of(JOMLCodecs.MAT3C, JOMLStreamCodecs.MAT3C, Matrix3fc.class);
	DataType<Matrix4fc> MAT4C = DataType.of(JOMLCodecs.MAT4C, JOMLStreamCodecs.MAT4C, Matrix4fc.class);
	DataType<Vector2dc> DVEC2C = DataType.of(JOMLCodecs.DVEC2C, JOMLStreamCodecs.DVEC2C, Vector2dc.class);
	DataType<Vector3dc> DVEC3C = DataType.of(JOMLCodecs.DVEC3C, JOMLStreamCodecs.DVEC3C, Vector3dc.class);
	DataType<Vector4dc> DVEC4C = DataType.of(JOMLCodecs.DVEC4C, JOMLStreamCodecs.DVEC4C, Vector4dc.class);
	DataType<Vector2dc> DVEC2SC = DataType.of(JOMLCodecs.DVEC2SC, JOMLStreamCodecs.DVEC2SC, Vector2dc.class);
	DataType<Vector3dc> DVEC3SC = DataType.of(JOMLCodecs.DVEC3SC, JOMLStreamCodecs.DVEC3SC, Vector3dc.class);
	DataType<Vector4dc> DVEC4SC = DataType.of(JOMLCodecs.DVEC4SC, JOMLStreamCodecs.DVEC4SC, Vector4dc.class);
	DataType<Quaterniondc> DQUATERNIONC = DataType.of(JOMLCodecs.DQUATERNIONC, JOMLStreamCodecs.DQUATERNIONC, Quaterniondc.class);
	DataType<Matrix2dc> DMAT2C = DataType.of(JOMLCodecs.DMAT2C, JOMLStreamCodecs.DMAT2C, Matrix2dc.class);
	DataType<Matrix3dc> DMAT3C = DataType.of(JOMLCodecs.DMAT3C, JOMLStreamCodecs.DMAT3C, Matrix3dc.class);
	DataType<Matrix4dc> DMAT4C = DataType.of(JOMLCodecs.DMAT4C, JOMLStreamCodecs.DMAT4C, Matrix4dc.class);
	DataType<Matrix2dc> FDMAT2C = DataType.of(JOMLCodecs.DMAT2C, JOMLStreamCodecs.FDMAT2C, Matrix2dc.class);
	DataType<Matrix3dc> FDMAT3C = DataType.of(JOMLCodecs.DMAT3C, JOMLStreamCodecs.FDMAT3C, Matrix3dc.class);
	DataType<Matrix4dc> FDMAT4C = DataType.of(JOMLCodecs.DMAT4C, JOMLStreamCodecs.FDMAT4C, Matrix4dc.class);
	DataType<Vector2ic> IVEC2C = DataType.of(JOMLCodecs.IVEC2C, JOMLStreamCodecs.IVEC2C, Vector2ic.class);
	DataType<Vector3ic> IVEC3C = DataType.of(JOMLCodecs.IVEC3C, JOMLStreamCodecs.IVEC3C, Vector3ic.class);
	DataType<Vector4ic> IVEC4C = DataType.of(JOMLCodecs.IVEC4C, JOMLStreamCodecs.IVEC4C, Vector4ic.class);
	DataType<Vector2ic> VIVEC2C = DataType.of(JOMLCodecs.IVEC2C, JOMLStreamCodecs.VIVEC2C, Vector2ic.class);
	DataType<Vector3ic> VIVEC3C = DataType.of(JOMLCodecs.IVEC3C, JOMLStreamCodecs.VIVEC3C, Vector3ic.class);
	DataType<Vector4ic> VIVEC4C = DataType.of(JOMLCodecs.IVEC4C, JOMLStreamCodecs.VIVEC4C, Vector4ic.class);
}
